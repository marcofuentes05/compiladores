# Generated from yapl.g4 by ANTLR 4.7.2
from antlr4 import *
from io import StringIO
from typing.io import TextIO
import sys



def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2.")
        buf.write("\u017a\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.")
        buf.write("\t.\4/\t/\4\60\t\60\3\2\3\2\3\3\3\3\3\4\3\4\3\5\3\5\3")
        buf.write("\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3")
        buf.write("\f\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21")
        buf.write("\3\22\3\22\3\22\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\5\24\u0092\n\24\3\25\3\25\3\25\3")
        buf.write("\25\3\25\3\25\3\25\3\25\5\25\u009c\n\25\3\26\3\26\3\26")
        buf.write("\3\26\3\26\3\26\3\27\3\27\3\27\3\27\5\27\u00a8\n\27\3")
        buf.write("\30\3\30\3\30\3\30\5\30\u00ae\n\30\3\31\3\31\3\31\3\31")
        buf.write("\5\31\u00b4\n\31\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3")
        buf.write("\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\5\32\u00c6")
        buf.write("\n\32\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\33\3\33\5\33\u00d4\n\33\3\34\3\34\3\34\3\34\3\34\3")
        buf.write("\34\3\34\3\34\5\34\u00de\n\34\3\35\3\35\3\35\3\35\3\35")
        buf.write("\3\35\3\35\3\35\5\35\u00e8\n\35\3\36\3\36\3\36\3\36\3")
        buf.write("\36\3\36\3\36\3\36\5\36\u00f2\n\36\3\37\3\37\3\37\3\37")
        buf.write("\3\37\3\37\3\37\3\37\3\37\3\37\5\37\u00fe\n\37\3 \3 \3")
        buf.write(" \3 \3 \3 \5 \u0106\n \3!\3!\3!\3!\3!\3!\5!\u010e\n!\3")
        buf.write("\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3$\3$\7$\u011b\n$\f$\16")
        buf.write("$\u011e\13$\3$\5$\u0121\n$\3%\3%\7%\u0125\n%\f%\16%\u0128")
        buf.write("\13%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3")
        buf.write("\'\3\'\3(\3(\3(\7(\u013c\n(\f(\16(\u013f\13(\3(\3(\3)")
        buf.write("\3)\3)\5)\u0146\n)\3*\3*\3*\3*\3*\3*\3+\3+\3,\3,\3,\3")
        buf.write(",\3-\6-\u0155\n-\r-\16-\u0156\3-\3-\3.\6.\u015c\n.\r.")
        buf.write("\16.\u015d\3/\3/\3/\3/\7/\u0164\n/\f/\16/\u0167\13/\3")
        buf.write("/\3/\3/\3/\3\60\3\60\3\60\3\60\7\60\u0171\n\60\f\60\16")
        buf.write("\60\u0174\13\60\3\60\3\60\3\60\3\60\3\60\4\u0165\u0172")
        buf.write("\2\61\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27")
        buf.write("\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'")
        buf.write("M(O)Q\2S\2U\2W*Y+[,]-_.\3\2\13\3\2C\\\6\2\62;C\\aac|\3")
        buf.write("\2c|\4\2$$^^\n\2$$\61\61^^ddhhppttvv\5\2\62;CHch\5\2\13")
        buf.write("\f\16\17\"\"\4\2\f\f\17\17\3\2\62;\2\u018d\2\3\3\2\2\2")
        buf.write("\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r")
        buf.write("\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3")
        buf.write("\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2")
        buf.write("\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'")
        buf.write("\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2")
        buf.write("\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29")
        buf.write("\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2")
        buf.write("C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2")
        buf.write("\2M\3\2\2\2\2O\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2")
        buf.write("\2\2]\3\2\2\2\2_\3\2\2\2\3a\3\2\2\2\5c\3\2\2\2\7e\3\2")
        buf.write("\2\2\tg\3\2\2\2\13i\3\2\2\2\rk\3\2\2\2\17m\3\2\2\2\21")
        buf.write("o\3\2\2\2\23r\3\2\2\2\25t\3\2\2\2\27v\3\2\2\2\31x\3\2")
        buf.write("\2\2\33z\3\2\2\2\35|\3\2\2\2\37~\3\2\2\2!\u0080\3\2\2")
        buf.write("\2#\u0082\3\2\2\2%\u0085\3\2\2\2\'\u0091\3\2\2\2)\u009b")
        buf.write("\3\2\2\2+\u009d\3\2\2\2-\u00a7\3\2\2\2/\u00ad\3\2\2\2")
        buf.write("\61\u00b3\3\2\2\2\63\u00c5\3\2\2\2\65\u00d3\3\2\2\2\67")
        buf.write("\u00dd\3\2\2\29\u00e7\3\2\2\2;\u00f1\3\2\2\2=\u00fd\3")
        buf.write("\2\2\2?\u0105\3\2\2\2A\u010d\3\2\2\2C\u010f\3\2\2\2E\u0114")
        buf.write("\3\2\2\2G\u0120\3\2\2\2I\u0122\3\2\2\2K\u0129\3\2\2\2")
        buf.write("M\u012e\3\2\2\2O\u0138\3\2\2\2Q\u0142\3\2\2\2S\u0147\3")
        buf.write("\2\2\2U\u014d\3\2\2\2W\u014f\3\2\2\2Y\u0154\3\2\2\2[\u015b")
        buf.write("\3\2\2\2]\u015f\3\2\2\2_\u016c\3\2\2\2ab\7=\2\2b\4\3\2")
        buf.write("\2\2cd\7}\2\2d\6\3\2\2\2ef\7\177\2\2f\b\3\2\2\2gh\7*\2")
        buf.write("\2h\n\3\2\2\2ij\7.\2\2j\f\3\2\2\2kl\7+\2\2l\16\3\2\2\2")
        buf.write("mn\7<\2\2n\20\3\2\2\2op\7>\2\2pq\7/\2\2q\22\3\2\2\2rs")
        buf.write("\7B\2\2s\24\3\2\2\2tu\7\60\2\2u\26\3\2\2\2vw\7-\2\2w\30")
        buf.write("\3\2\2\2xy\7/\2\2y\32\3\2\2\2z{\7,\2\2{\34\3\2\2\2|}\7")
        buf.write("\61\2\2}\36\3\2\2\2~\177\7\u0080\2\2\177 \3\2\2\2\u0080")
        buf.write("\u0081\7>\2\2\u0081\"\3\2\2\2\u0082\u0083\7>\2\2\u0083")
        buf.write("\u0084\7?\2\2\u0084$\3\2\2\2\u0085\u0086\7?\2\2\u0086")
        buf.write("&\3\2\2\2\u0087\u0088\7e\2\2\u0088\u0089\7n\2\2\u0089")
        buf.write("\u008a\7c\2\2\u008a\u008b\7u\2\2\u008b\u0092\7u\2\2\u008c")
        buf.write("\u008d\7E\2\2\u008d\u008e\7N\2\2\u008e\u008f\7C\2\2\u008f")
        buf.write("\u0090\7U\2\2\u0090\u0092\7U\2\2\u0091\u0087\3\2\2\2\u0091")
        buf.write("\u008c\3\2\2\2\u0092(\3\2\2\2\u0093\u0094\7g\2\2\u0094")
        buf.write("\u0095\7n\2\2\u0095\u0096\7u\2\2\u0096\u009c\7g\2\2\u0097")
        buf.write("\u0098\7G\2\2\u0098\u0099\7N\2\2\u0099\u009a\7U\2\2\u009a")
        buf.write("\u009c\7G\2\2\u009b\u0093\3\2\2\2\u009b\u0097\3\2\2\2")
        buf.write("\u009c*\3\2\2\2\u009d\u009e\7h\2\2\u009e\u009f\7c\2\2")
        buf.write("\u009f\u00a0\7n\2\2\u00a0\u00a1\7u\2\2\u00a1\u00a2\7g")
        buf.write("\2\2\u00a2,\3\2\2\2\u00a3\u00a4\7h\2\2\u00a4\u00a8\7k")
        buf.write("\2\2\u00a5\u00a6\7H\2\2\u00a6\u00a8\7K\2\2\u00a7\u00a3")
        buf.write("\3\2\2\2\u00a7\u00a5\3\2\2\2\u00a8.\3\2\2\2\u00a9\u00aa")
        buf.write("\7k\2\2\u00aa\u00ae\7h\2\2\u00ab\u00ac\7K\2\2\u00ac\u00ae")
        buf.write("\7H\2\2\u00ad\u00a9\3\2\2\2\u00ad\u00ab\3\2\2\2\u00ae")
        buf.write("\60\3\2\2\2\u00af\u00b0\7k\2\2\u00b0\u00b4\7p\2\2\u00b1")
        buf.write("\u00b2\7K\2\2\u00b2\u00b4\7P\2\2\u00b3\u00af\3\2\2\2\u00b3")
        buf.write("\u00b1\3\2\2\2\u00b4\62\3\2\2\2\u00b5\u00b6\7k\2\2\u00b6")
        buf.write("\u00b7\7p\2\2\u00b7\u00b8\7j\2\2\u00b8\u00b9\7g\2\2\u00b9")
        buf.write("\u00ba\7t\2\2\u00ba\u00bb\7k\2\2\u00bb\u00bc\7v\2\2\u00bc")
        buf.write("\u00c6\7u\2\2\u00bd\u00be\7K\2\2\u00be\u00bf\7P\2\2\u00bf")
        buf.write("\u00c0\7J\2\2\u00c0\u00c1\7G\2\2\u00c1\u00c2\7T\2\2\u00c2")
        buf.write("\u00c3\7K\2\2\u00c3\u00c4\7V\2\2\u00c4\u00c6\7U\2\2\u00c5")
        buf.write("\u00b5\3\2\2\2\u00c5\u00bd\3\2\2\2\u00c6\64\3\2\2\2\u00c7")
        buf.write("\u00c8\7k\2\2\u00c8\u00c9\7u\2\2\u00c9\u00ca\7x\2\2\u00ca")
        buf.write("\u00cb\7q\2\2\u00cb\u00cc\7k\2\2\u00cc\u00d4\7f\2\2\u00cd")
        buf.write("\u00ce\7K\2\2\u00ce\u00cf\7U\2\2\u00cf\u00d0\7X\2\2\u00d0")
        buf.write("\u00d1\7Q\2\2\u00d1\u00d2\7K\2\2\u00d2\u00d4\7F\2\2\u00d3")
        buf.write("\u00c7\3\2\2\2\u00d3\u00cd\3\2\2\2\u00d4\66\3\2\2\2\u00d5")
        buf.write("\u00d6\7n\2\2\u00d6\u00d7\7q\2\2\u00d7\u00d8\7q\2\2\u00d8")
        buf.write("\u00de\7r\2\2\u00d9\u00da\7N\2\2\u00da\u00db\7Q\2\2\u00db")
        buf.write("\u00dc\7Q\2\2\u00dc\u00de\7R\2\2\u00dd\u00d5\3\2\2\2\u00dd")
        buf.write("\u00d9\3\2\2\2\u00de8\3\2\2\2\u00df\u00e0\7r\2\2\u00e0")
        buf.write("\u00e1\7q\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e8\7n\2\2\u00e3")
        buf.write("\u00e4\7R\2\2\u00e4\u00e5\7Q\2\2\u00e5\u00e6\7Q\2\2\u00e6")
        buf.write("\u00e8\7N\2\2\u00e7\u00df\3\2\2\2\u00e7\u00e3\3\2\2\2")
        buf.write("\u00e8:\3\2\2\2\u00e9\u00ea\7v\2\2\u00ea\u00eb\7j\2\2")
        buf.write("\u00eb\u00ec\7g\2\2\u00ec\u00f2\7p\2\2\u00ed\u00ee\7V")
        buf.write("\2\2\u00ee\u00ef\7J\2\2\u00ef\u00f0\7G\2\2\u00f0\u00f2")
        buf.write("\7P\2\2\u00f1\u00e9\3\2\2\2\u00f1\u00ed\3\2\2\2\u00f2")
        buf.write("<\3\2\2\2\u00f3\u00f4\7y\2\2\u00f4\u00f5\7j\2\2\u00f5")
        buf.write("\u00f6\7k\2\2\u00f6\u00f7\7n\2\2\u00f7\u00fe\7g\2\2\u00f8")
        buf.write("\u00f9\7Y\2\2\u00f9\u00fa\7J\2\2\u00fa\u00fb\7K\2\2\u00fb")
        buf.write("\u00fc\7N\2\2\u00fc\u00fe\7G\2\2\u00fd\u00f3\3\2\2\2\u00fd")
        buf.write("\u00f8\3\2\2\2\u00fe>\3\2\2\2\u00ff\u0100\7p\2\2\u0100")
        buf.write("\u0101\7g\2\2\u0101\u0106\7y\2\2\u0102\u0103\7P\2\2\u0103")
        buf.write("\u0104\7G\2\2\u0104\u0106\7Y\2\2\u0105\u00ff\3\2\2\2\u0105")
        buf.write("\u0102\3\2\2\2\u0106@\3\2\2\2\u0107\u0108\7p\2\2\u0108")
        buf.write("\u0109\7q\2\2\u0109\u010e\7v\2\2\u010a\u010b\7P\2\2\u010b")
        buf.write("\u010c\7Q\2\2\u010c\u010e\7V\2\2\u010d\u0107\3\2\2\2\u010d")
        buf.write("\u010a\3\2\2\2\u010eB\3\2\2\2\u010f\u0110\7v\2\2\u0110")
        buf.write("\u0111\7t\2\2\u0111\u0112\7w\2\2\u0112\u0113\7g\2\2\u0113")
        buf.write("D\3\2\2\2\u0114\u0115\7n\2\2\u0115\u0116\7g\2\2\u0116")
        buf.write("\u0117\7v\2\2\u0117F\3\2\2\2\u0118\u011c\t\2\2\2\u0119")
        buf.write("\u011b\t\3\2\2\u011a\u0119\3\2\2\2\u011b\u011e\3\2\2\2")
        buf.write("\u011c\u011a\3\2\2\2\u011c\u011d\3\2\2\2\u011d\u0121\3")
        buf.write("\2\2\2\u011e\u011c\3\2\2\2\u011f\u0121\5M\'\2\u0120\u0118")
        buf.write("\3\2\2\2\u0120\u011f\3\2\2\2\u0121H\3\2\2\2\u0122\u0126")
        buf.write("\t\4\2\2\u0123\u0125\t\3\2\2\u0124\u0123\3\2\2\2\u0125")
        buf.write("\u0128\3\2\2\2\u0126\u0124\3\2\2\2\u0126\u0127\3\2\2\2")
        buf.write("\u0127J\3\2\2\2\u0128\u0126\3\2\2\2\u0129\u012a\7u\2\2")
        buf.write("\u012a\u012b\7g\2\2\u012b\u012c\7n\2\2\u012c\u012d\7h")
        buf.write("\2\2\u012dL\3\2\2\2\u012e\u012f\7U\2\2\u012f\u0130\7G")
        buf.write("\2\2\u0130\u0131\7N\2\2\u0131\u0132\7H\2\2\u0132\u0133")
        buf.write("\7a\2\2\u0133\u0134\7V\2\2\u0134\u0135\7[\2\2\u0135\u0136")
        buf.write("\7R\2\2\u0136\u0137\7G\2\2\u0137N\3\2\2\2\u0138\u013d")
        buf.write("\7$\2\2\u0139\u013c\5Q)\2\u013a\u013c\n\5\2\2\u013b\u0139")
        buf.write("\3\2\2\2\u013b\u013a\3\2\2\2\u013c\u013f\3\2\2\2\u013d")
        buf.write("\u013b\3\2\2\2\u013d\u013e\3\2\2\2\u013e\u0140\3\2\2\2")
        buf.write("\u013f\u013d\3\2\2\2\u0140\u0141\7$\2\2\u0141P\3\2\2\2")
        buf.write("\u0142\u0145\7^\2\2\u0143\u0146\t\6\2\2\u0144\u0146\5")
        buf.write("S*\2\u0145\u0143\3\2\2\2\u0145\u0144\3\2\2\2\u0146R\3")
        buf.write("\2\2\2\u0147\u0148\7w\2\2\u0148\u0149\5U+\2\u0149\u014a")
        buf.write("\5U+\2\u014a\u014b\5U+\2\u014b\u014c\5U+\2\u014cT\3\2")
        buf.write("\2\2\u014d\u014e\t\7\2\2\u014eV\3\2\2\2\u014f\u0150\t")
        buf.write("\b\2\2\u0150\u0151\3\2\2\2\u0151\u0152\b,\2\2\u0152X\3")
        buf.write("\2\2\2\u0153\u0155\t\t\2\2\u0154\u0153\3\2\2\2\u0155\u0156")
        buf.write("\3\2\2\2\u0156\u0154\3\2\2\2\u0156\u0157\3\2\2\2\u0157")
        buf.write("\u0158\3\2\2\2\u0158\u0159\b-\2\2\u0159Z\3\2\2\2\u015a")
        buf.write("\u015c\t\n\2\2\u015b\u015a\3\2\2\2\u015c\u015d\3\2\2\2")
        buf.write("\u015d\u015b\3\2\2\2\u015d\u015e\3\2\2\2\u015e\\\3\2\2")
        buf.write("\2\u015f\u0160\7/\2\2\u0160\u0161\7/\2\2\u0161\u0165\3")
        buf.write("\2\2\2\u0162\u0164\13\2\2\2\u0163\u0162\3\2\2\2\u0164")
        buf.write("\u0167\3\2\2\2\u0165\u0166\3\2\2\2\u0165\u0163\3\2\2\2")
        buf.write("\u0166\u0168\3\2\2\2\u0167\u0165\3\2\2\2\u0168\u0169\5")
        buf.write("Y-\2\u0169\u016a\3\2\2\2\u016a\u016b\b/\2\2\u016b^\3\2")
        buf.write("\2\2\u016c\u016d\7*\2\2\u016d\u016e\7,\2\2\u016e\u0172")
        buf.write("\3\2\2\2\u016f\u0171\13\2\2\2\u0170\u016f\3\2\2\2\u0171")
        buf.write("\u0174\3\2\2\2\u0172\u0173\3\2\2\2\u0172\u0170\3\2\2\2")
        buf.write("\u0173\u0175\3\2\2\2\u0174\u0172\3\2\2\2\u0175\u0176\7")
        buf.write(",\2\2\u0176\u0177\7+\2\2\u0177\u0178\3\2\2\2\u0178\u0179")
        buf.write("\b\60\2\2\u0179`\3\2\2\2\32\2\u0091\u009b\u00a7\u00ad")
        buf.write("\u00b3\u00c5\u00d3\u00dd\u00e7\u00f1\u00fd\u0105\u010d")
        buf.write("\u011c\u0120\u0126\u013b\u013d\u0145\u0156\u015d\u0165")
        buf.write("\u0172\3\b\2\2")
        return buf.getvalue()


class yaplLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    CLASS = 19
    ELSE = 20
    FALSE = 21
    FI = 22
    IF = 23
    IN = 24
    INHERITS = 25
    ISVOID = 26
    LOOP = 27
    POOL = 28
    THEN = 29
    WHILE = 30
    NEW = 31
    NOT = 32
    TRUE = 33
    LET = 34
    TYPE_ID = 35
    OBJECT_ID = 36
    SELF = 37
    SELF_TYPE = 38
    STRING = 39
    WHITESPACE = 40
    NEWLINE = 41
    INT = 42
    COMMENT = 43
    COMMENT_BLOCK = 44

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'{'", "'}'", "'('", "','", "')'", "':'", "'<-'", "'@'", 
            "'.'", "'+'", "'-'", "'*'", "'/'", "'~'", "'<'", "'<='", "'='", 
            "'false'", "'true'", "'let'", "'self'", "'SELF_TYPE'" ]

    symbolicNames = [ "<INVALID>",
            "CLASS", "ELSE", "FALSE", "FI", "IF", "IN", "INHERITS", "ISVOID", 
            "LOOP", "POOL", "THEN", "WHILE", "NEW", "NOT", "TRUE", "LET", 
            "TYPE_ID", "OBJECT_ID", "SELF", "SELF_TYPE", "STRING", "WHITESPACE", 
            "NEWLINE", "INT", "COMMENT", "COMMENT_BLOCK" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "CLASS", "ELSE", "FALSE", 
                  "FI", "IF", "IN", "INHERITS", "ISVOID", "LOOP", "POOL", 
                  "THEN", "WHILE", "NEW", "NOT", "TRUE", "LET", "TYPE_ID", 
                  "OBJECT_ID", "SELF", "SELF_TYPE", "STRING", "ESC", "UNICODE", 
                  "HEX", "WHITESPACE", "NEWLINE", "INT", "COMMENT", "COMMENT_BLOCK" ]

    grammarFileName = "yapl.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.7.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


